@model GetNewsListDto
@{
    ViewData["Title"] = "News list";
}

@section Styles
{
    <style>
        nav[aria-label="Page navigation"] a[class="page-link"] {
            cursor: pointer;
        }
    </style>
}

<h1>News list</h1>
<hr />
<div class="row">
    <div class="col-xl-4">
        <h1 class="mb-3">Filters</h1>
        <hr />
        <form id="newsListForm" class="needs-validation" novalidate="" method="get" asp-route="NewsList">
            <input type="hidden" name="page" value="@Model.Filters.Page" />
            <div class="row g-3">
                <div class="col-sm-6">
                    <label for="startPublishedAtDatetimeLocal" class="form-label">Start of publish time</label>
                    <input id="startPublishedAtDatetimeLocal" class="form-control" type="datetime-local" placeholder="" name="startPublishedAt" max="@DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm")" value="@Model.Filters.StartPublishedAt?.ToString("yyyy-MM-ddTHH:mm")">
                </div>
                <div class="col-sm-6">
                    <label for="endPublishedAtDatetimeLocal" class="form-label">End of publish time</label>
                    <input id="endPublishedAtDatetimeLocal" class="form-control" type="datetime-local" placeholder="" name="endPublishedAt" max="@DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm")" value="@Model.Filters.EndPublishedAt?.ToString("yyyy-MM-ddTHH:mm")">
                </div>
                <div class="col-12">
                    <label for="searchStringTextInput" class="form-label">Search string</label>
                    <input id="searchStringTextInput" class="form-control" type="text" placeholder="" name="searchString" value="@Model.Filters.SearchString">
                </div>
                <div class="col-12">
                    <label for="newsEditorsSelect" class="form-label">News editors</label>
                    <select id="newsEditorsSelect" class="form-select multiple" multiple name="newsEditorsIds" size="5">
                        @foreach (var newsEditor in Model.NewsEditors)
                        {
                            @if (Model.Filters.NewsEditorsIds?.Contains(newsEditor.Id) ?? false)
                            {
                                <option value="@newsEditor.Id" selected>
                                    @newsEditor.GetFormattedName() (@newsEditor.Source?.Title)
                                </option>
                            }
                            else
                            {
                                <option value="@newsEditor.Id">
                                    @newsEditor.GetFormattedName() (@newsEditor.Source?.Title)
                                </option>
                            }
                        }
                    </select>
                </div>
                <div class="col-12">
                    <label for="newsSourcesSelect" class="form-label">News soures</label>
                    <select id="newsSourcesSelect" class="form-select multiple" multiple name="newsSourcesIds" size="5">
                        @foreach (var newsSource in Model.NewsSources)
                        {
                            @if (Model.Filters.NewsSourcesIds?.Contains(newsSource.Id) ?? false)
                            {
                                <option value="@newsSource.Id" selected>
                                    @newsSource.Title (@newsSource.SiteUrl)
                                </option>
                            }
                            else
                            {
                                <option value="@newsSource.Id">
                                    @newsSource.Title (@newsSource.SiteUrl)
                                </option>
                            }
                        }
                    </select>
                </div>
                <div class="col-12">
                    @Html.CheckBox("hasPublishedAtRequired", Model.Filters.HasPublishedAtRequired, new { @class = "form-check-input", id = "hasPublishedAtRequiredCheck" })
                    <label class="form-check-label" for="hasPublishedAtRequiredCheck">
                        Has published at required
                    </label>
                </div>
                <div class="col-12">
                    @Html.CheckBox("hasSubTitleRequired", Model.Filters.HasSubTitleRequired, new { @class = "form-check-input", id = "hasSubTitleRequiredCheck" })
                    <label class="form-check-label" for="hasSubTitleRequiredCheck">
                        Has sub title required
                    </label>
                </div>
                <div class="col-12">
                    @Html.CheckBox("hasPictureRequired", Model.Filters.HasPictureRequired, new { @class = "form-check-input", id = "hasPictureRequiredCheck" })
                    <label class="form-check-label" for="hasPictureRequiredCheck">
                        Has picture required
                    </label>
                </div>
                <div class="col-12">
                    <label for="sortBySelect" class="form-label">Sort by</label>
                    <select class="form-select" id="sortBySelect" name="sortBy">
                        @foreach (var sortOption in Model.SortingOptions)
                        {
                            @if (Model.Filters.SortBy == sortOption.Key)
                            {
                                <option value="@sortOption.Key" selected>
                                    @sortOption.Value
                                </option>
                            }
                            else
                            {
                                <option value="@sortOption.Key">
                                    @sortOption.Value
                                </option>
                            }
                        }
                    </select>
                </div>
                <div class="col-12">
                    <label for="pageSizeSelect" class="form-label">Page size</label>
                    <select id="pageSizeSelect" class="form-select" name="pageSize">
                        @foreach (var pageSize in Model.PageSizes)
                        {
                            @if (pageSize == Model.Filters.PageSize)
                            {
                                <option value="@pageSize" selected>
                                    @pageSize
                                </option>
                            }
                            else
                            {
                                <option value="@pageSize">
                                    @pageSize
                                </option>
                            }
                        }
                    </select>
                </div>
            </div>
            <hr class="my-4" />
            <div class="d-grid gap-2">
                <button class="w-100 btn btn-danger btn-lg" type="reset">
                    <a class="text-decoration-none text-reset" asp-route="NewsList">
                        Reset filters
                    </a>
                </button>
                <button class="w-100 btn btn-primary btn-lg" type="submit">Apply filters</button>
            </div>
        </form>
        <hr class="d-xl-none" />
    </div>
    <div class="col-xl-8">
        <h1>Show @Model.Result.GetFormattedShowedItems() from @Model.Result.GetFormattedTotalItems() news</h1>
        <hr />
        <div class="news-list-container mb-3">
            <div class="news-list-container__grid row g-3">
                @foreach (var news in Model.Result.Items)
                {
                    <div class="col-12">
                        <div class="card flex-md-row mb-4 box-shadow h-md-250">
                            @if (news.Picture is not null)
                            {
                                <img class="card-img-right flex-auto d-none d-md-block" data-src="holder.js/200x250?theme=thumb" alt="Thumbnail [200x250]" src="@news.Picture.Url" data-holder-rendered="true">
                            }
                            else
                            {
                                <img class="card-img-right flex-auto d-none d-md-block" data-src="holder.js/200x250?theme=thumb" alt="Thumbnail [200x250]" src="data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22200%22%20height%3D%22250%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20200%20250%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_18d5e720f5d%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A13pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_18d5e720f5d%22%3E%3Crect%20width%3D%22200%22%20height%3D%22250%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2256.1953125%22%20y%3D%22131%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E" data-holder-rendered="true" style="width: 250px; height: 250px;">
                            }
                            <div class="card-body d-flex flex-column align-items-start">
                                @if (news.Editor?.Source is not null)
                                {
                                    <a class="card-text text-decoration-none" asp-route="Source" asp-route-id="@news.Editor.Source.Id">
                                        @news.Editor.Source.Title
                                    </a>
                                }
                                <h3 class="mb-0 overflow-hidden" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="@news.Title">
                                    <a class="overflow-hidden text-decoration-none" asp-route="News" asp-route-id="@news.Id">@news.Title</a>
                                </h3>
                                @if (news.PublishedAt is not null)
                                {
                                    <div class="mb-1 text-muted" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="@news.GetFormattedPublishedAt()">
                                        @news.GetFormattedPublishedAt()
                                    </div>
                                }
                                <p class="card-text mb-auto overflow-hidden" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="@news.SubTitle?.Title">@news.SubTitle?.Title</p>
                                <a asp-route="News" asp-route-id="@news.Id">Continue reading</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.Filters.Page == 1 ? "disabled" : "")">
                    <a class="page-link" aria-label="Previous" onclick="onClickPageItem(@(Model.Filters.Page - 1))">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                @foreach (var pageNumber in Model.Result.GetPageNumbers())
                {
                    <li class="page-item @(Model.Filters.Page == pageNumber ? "active" : "")">
                        <a class="page-link" onclick="onClickPageItem(@pageNumber)">
                            @pageNumber
                        </a>
                    </li>
                }
                <li class="page-item @(Model.Filters.Page == Model.Result.TotalPages ? "disabled" : "")">
                    <a class="page-link" aria-label="Next" onclick="onClickPageItem(@(Model.Filters.Page + 1))">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@section Scripts 
{
    <script type="text/javascript">
        function onClickPageItem(pageNumber) {
            const form = document.querySelector('form[id="newsListForm"]');
            const buttonForm = form.querySelector('button[type="submit"]');
            const pageHiddenInput = form.querySelector('input[type="hidden"][name="page"]');
            
            pageHiddenInput.setAttribute('value', pageNumber);
            buttonForm.click();
        }
    </script>
}