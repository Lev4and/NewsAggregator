@model News
@{
    ViewData["Title"] = Model.Title;
}

@section MetaTags
{
    <meta itemprop="item" content="@Model.Url">
    <meta itemprop="name" content="@Model.Title">
    @if (Model.SubTitle is not null)
    {
        <meta itemprop="description" content="@Model.SubTitle.Title">
        <meta itemprop="alternativeHeadline" content="@Model.SubTitle.Title">
    }
    <meta itemprop="dateCreated" content="@Model.AddedAt.ToString("yyyy-MM-ddTHH:mm:sszzz")">
    @if (Model.PublishedAt is not null)
    {
        <meta itemprop="datePublished" content="@Model.PublishedAt?.ToString("yyyy-MM-ddTHH:mm:sszzz")">
    }
    @if (Model.ModifiedAt is not null)
    {
        <meta itemprop="dateModified" content="@Model.ModifiedAt?.ToString("yyyy-MM-ddTHH:mm:sszzz")">
    }
    @if (Model.Editor is not null)
    {
        <meta itemprop="author" content="@Model.Editor.Name">
    }
    @if (Model.Picture is not null)
    {
        <meta itemprop="image" content="@Model.Picture.Url">
    }
    @if (Model.Video is not null)
    {
        <meta itemprop="video" content="@Model.Video.Url">
    }
    <meta itemprop="article:id" content="@Model.Id">
    <meta itemprop="article:originalUrl" content="@Model.Url">
    <meta itemprop="article:title" content="@Model.Title">
    @if (Model.SubTitle is not null)
    {
        <meta itemprop="article:alternativeHeadline" content="@Model.SubTitle.Title">
    }
    <meta itemprop="article:dateCreated" content="@Model.AddedAt.ToString("yyyy-MM-ddTHH:mm:sszzz")">
    @if (Model.PublishedAt is not null)
    {
        <meta itemprop="article:datePublished" content="@Model.PublishedAt?.ToString("yyyy-MM-ddTHH:mm:sszzz")">
    }
    @if (Model.ModifiedAt is not null)
    {
        <meta itemprop="article:dateModified" content="@Model.ModifiedAt?.ToString("yyyy-MM-ddTHH:mm:sszzz")">
    }
    @if (Model.Editor is not null)
    {
        <meta itemprop="article:author" content="@Model.Editor.Name">

        @if (Model.Editor.Source is not null)
        {
            <meta itemprop="article:source" content="@Model.Editor.Source.Title">
        }
    }
    @if (Model.Picture is not null)
    {
        <meta itemprop="article:image" content="@Model.Picture.Url">
    }
    @if (Model.Video is not null)
    {
        <meta itemprop="article:video" content="@Model.Video.Url">
    }
}

@section Styles 
{
    <style>
        span[itemprop="source"] a img[itemprop="logo"] {
            width: 16px;
            height: 16px;
            object-fit: cover;
        }

        div[itemprop="articleBody"] img {
            width: 100%;
            height: auto;
            object-fit: cover;
        }

        video[itemprop="video"] {
            width: 100%;
        }
    </style>
}

<div class="row g-5">
    <div class="col-md-8">
        <article class="blog-post" source="@Model.Editor?.Source?.Title">
            <h1 class="display-5 link-body-emphasis mb-1" itemprop="headline">@Model.Title</h1>
            <p class="blog-post-meta">
                @if (Model.PublishedAt is not null)
                {
                    <span itemprop="datePublished">
                        Date of publication:
                        <a class="text-decoration-none" asp-route="NewsList" asp-route-startPublishedAt="@Model.PublishedAt?.Date.ToString("yyyy-MM-ddTHH:mm:ss")" asp-route-endPublishedAt="@Model.PublishedAt?.AddDays(1).Date.ToString("yyyy-MM-ddTHH:mm:ss")">
                            <time datetime="@Model.PublishedAt?.ToString("dd-MM-yyyyTHH:mm:sszzz")" format="MMM. DD, YYYY, h:mm A Z">
                                @Model.GetFormattedPublishedAt()
                            </time>
                        </a>
                    </span>
                }
                @if (Model.ModifiedAt is not null)
                {
                    <span itemprop="dateModified">
                        Date of modified:
                        <time datetime="@Model.ModifiedAt?.ToString("dd-MM-yyyyTHH:mm:sszzz")" format="MMM. DD, YYYY, h:mm A Z">
                            @Model.GetFormattedModifiedAt()
                        </time>
                    </span>
                }
                @if (Model.Editor is not null)
                {
                    <span itemprop="author">
                        Author: <a class="text-decoration-none" asp-route="Author" asp-route-id="@Model.Editor.Id" itemprop="name">@Model.Editor.Name</a>
                    </span>
                }
                @if (Model.Editor?.Source is not null)
                {
                    <span itemprop="source">
                        Source:
                        <a class="text-decoration-none" asp-route="Source" asp-route-id="@Model.Editor.Source.Id">
                            <img itemprop="logo" src="@Model.Editor.Source.Logo?.Small" />
                            <span itemprop="title">@Model.Editor.Source.Title</span>
                        </a>
                    </span>
                }

                <span itemprop="original">
                    Original: <a class="text-decoration-none" href="@Model.Url" target="_blank">@Model.Url</a>
                </span>
            </p>
            @if (Model.SubTitle is not null)
            {
                <span itemprop="alternativeHeadline">@Model.SubTitle.Title</span>
            }
            <hr />
            @if (Model.Picture is not null && Model.Video is null)
            {
                <img itemprop="image" src="@Model.Picture.Url" class="w-100" />
            }
            @if (Model.Video is not null)
            {
                <video itemprop="video" src="@Model.Video.Url" controls>

                </video>
            }
            @if (Model.HtmlDescription is not null)
            {
                <div itemprop="articleBody">
                    @Html.Raw(Model.HtmlDescription.Description)
                </div>
            }
        </article>
    </div>
    <div class="col-md-4">
        <div>
            <vc:recent-news-side-bar count="100" />
        </div>
    </div>
</div>